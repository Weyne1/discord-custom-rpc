<Window x:Class="Discord_Custom_RPC.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Icon="/app_icon.ico"
        mc:Ignorable="d"
        AllowsTransparency="True"
        Background="Transparent"
        Closing="MainWindow_Closing"
        Title="Discord Custom RPC" ResizeMode="NoResize" Height="450" Width="694" WindowStyle="None">
    <Window.Resources>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#5865F2"/>

        <Style x:Key="TextBoxes" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" To="#5865F2" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="BorderBrush.Color" To="#1e2124" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ButtonDevPortal.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="ButtonDevPortal.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="ButtonDevPortal.MouseOver.Background" Color="#525252"/>
        <SolidColorBrush x:Key="ButtonDevPortal.MouseOver.Border" Color="#ffffff"/>
        <SolidColorBrush x:Key="ButtonDevPortal.Pressed.Background" Color="#424242"/>
        <SolidColorBrush x:Key="ButtonDevPortal.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="ButtonDevPortal.Disabled.Background" Color="#2f3361"/>
        <SolidColorBrush x:Key="ButtonDevPortal.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="ButtonDevPortal.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonDevPortalStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonDevPortal.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonDevPortal.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Анимация изменения цвета Background -->
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#525252" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Анимация возврата в исходное состояние Background -->
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF707070" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonDevPortal.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonDevPortal.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3843ba"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#30399c"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#2f3361"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonSetupStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Анимация изменения цвета Background -->
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#3843ba" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Анимация возврата в исходное состояние Background -->
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#5865F2" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.EnterActions>
                                    <!-- Анимация плавной деактивации -->
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <!-- Анимация плавной активации -->
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonSetActivityStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Анимация изменения цвета Background -->
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#3843ba" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Анимация возврата в исходное состояние Background -->
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#5865F2" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.EnterActions>
                                    <!-- Анимация плавной деактивации -->
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <!-- Анимация плавной активации -->
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ToggleSwitch -->
        <Style TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">

                        <StackPanel Orientation="Horizontal">
                            <Grid Cursor="Hand">
                                <Border x:Name="bg" Width="40" Height="23" Background="Gray" CornerRadius="11" Margin="5,0"/>
                                <Border x:Name="button" Height="20" Width="20" CornerRadius="12.5" HorizontalAlignment="Left" Margin="7,0"></Border>
                            </Grid>
                            <ContentPresenter x:Name="content" Margin="10,0,0,0" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                        </StackPanel>

                        <ControlTemplate.Resources>
                            <Storyboard x:Key="right">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="7,0,0,0" To="23,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard x:Key="left">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="23,0,0,0" To="7,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsChecked" Value="false">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#ffffff"></Setter>
                                <Setter TargetName="bg" Property="Background" Value="Gray"></Setter>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt"></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#ffffff"></Setter>
                                <Setter TargetName="button" Property="Margin" Value="23,0,0,0"></Setter>
                                <Setter TargetName="bg" Property="Background" Value="#00a34f"></Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangleStyleWarn" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="#ed3752"/>
            <Setter Property="RadiusX" Value="5"/>
            <Setter Property="RadiusY" Value="5"/>
            <Setter Property="StrokeThickness" Value="0"/>
            <Setter Property="Opacity" Value="0"/>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBlockStyleWarn" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value="0"/>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ImageStyle" TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Анимация изменения Opacity -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Анимация изменения Opacity при выходе мыши -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid x:Name="MainRoot" Background="#36393e" Height="434" Width="682">
        <Grid.Effect>
            <DropShadowEffect Color="Black" Direction="270" ShadowDepth="0" BlurRadius="10"/>
        </Grid.Effect>
        <Grid.RowDefinitions>
            <RowDefinition Height="7.001" />
            <RowDefinition Height="22.336" />
            <RowDefinition Height="12*" />
            <RowDefinition Height="15.229" />
            <RowDefinition Height="49.796" />
            <RowDefinition Height="15" />
            <RowDefinition Height="91.557"/>
            <RowDefinition Height="14.934" />
            <RowDefinition Height="50"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="34.558"/>
            <RowDefinition Height="14.934"/>
            <RowDefinition Height="49.779"/>
            <RowDefinition Height="13*"/>
            <RowDefinition Height="22" />
            <RowDefinition Height="6*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="5.552"/>
            <ColumnDefinition Width="5.009"/>
            <ColumnDefinition Width="200.401"/>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="176"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="18.019"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="4.948"/>
        </Grid.ColumnDefinitions>



        <!-- ЛЕВЫЕ ПОЛЯ -->

        <!-- AppID -->
        <TextBlock x:Name="TextAppID" Text="*APPLICATION ID:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7"
           Grid.Column="3" Grid.Row="3" VerticalAlignment="Top" Height="12" Margin="1,0,30,0" Grid.ColumnSpan="2">
        </TextBlock>
        <TextBlock x:Name="TextAppIDWatermark" Text="Enter ID (required)..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="3" Grid.Row="4" VerticalAlignment="Top" Height="21" Margin="11,11,30,0" Grid.ColumnSpan="2"/>
        <TextBox x:Name="TextBoxAppID" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="NoWrap" Text="" 
                 VerticalAlignment="Top" Width="196" Background="#1e2124" Height="37" TextChanged="TextBoxAppIDTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="20" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Center" Padding="5" PreviewTextInput="NumberValidationTextBox" 
                 Grid.Column="3" Grid.Row="4" Margin="0,3,0,0"/>

        <!-- Details -->
        <TextBlock x:Name="TextDetails" Text="DETAILS:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7" 
                   Grid.Column="3" Grid.Row="4" VerticalAlignment="Top" Height="12" Margin="1,48,30,0" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
        <TextBlock x:Name="TextDetailsWatermark" Text="First subtitle..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="3" Grid.Row="6" VerticalAlignment="Top" Height="69" Margin="11,6,30,0"/>
        <TextBox x:Name="TextBoxDetails" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="Wrap" Text="" 
                 VerticalAlignment="Top" Width="196" Background="#1e2124" Height="88" TextChanged="TextBoxDetailsTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="128" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Top" Padding="5" 
                 Grid.Column="3" Grid.Row="6"/>

        <!-- State -->
        <TextBlock x:Name="TextState" Text="STATE:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7" 
                   Grid.Column="3" Grid.Row="7" VerticalAlignment="Center" Height="12" Margin="1,0,30,0" Grid.ColumnSpan="2"/>
        <TextBlock x:Name="TextStateWatermark" Text="Second subtitle..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="3" Grid.Row="8" VerticalAlignment="Top" Height="69" Margin="11,13,30,0" Grid.RowSpan="3"/>
        <TextBox x:Name="TextBoxState" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="Wrap" Text="" 
                 VerticalAlignment="Top" Width="196" Background="#1e2124" Height="88" TextChanged="TextBoxStateTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" SelectionBrush="#5865F2" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="128" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Top" Padding="5" 
                 Grid.Column="3" Grid.Row="8" Grid.RowSpan="3" Margin="0,4,0,0"/>

        <!-- Timestamp -->
        <TextBlock x:Name="TextTimestamp" Text="CUSTOM TIMESTAMP:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7" 
                   Grid.Column="3" Grid.Row="10" VerticalAlignment="Top" Height="14" Margin="1,34,30,0" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
        <TextBlock x:Name="TextTimestampWatermark" Text="Unix timecode..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="3" Grid.Row="12" VerticalAlignment="Top" Height="21" Margin="11,11,30,0" Grid.ColumnSpan="2"/>
        <TextBox x:Name="TextBoxTimestamp" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="NoWrap" Text="" 
                 VerticalAlignment="Top" Width="196" Background="#1e2124" Height="37" TextChanged="TextBoxTimestampTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" SelectionBrush="#5865F2" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="20" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Top" Padding="5" PreviewTextInput="NumberValidationTextBox"
                 Grid.Column="3" Grid.Row="12" Margin="0,3,0,0"/>


        <!-- ЦЕНТРАЛЬНЫЕ ПОЛЯ -->

        <!-- Иконка дискорда/аватарки -->
        <Image Style="{DynamicResource ImageStyle}" x:Name="ImageDSLogo" MouseLeftButtonDown="ImageMouseRotation" Grid.Column="5" Margin="67,7,63,79" Grid.Row="4" Source="/Assets/ds_logo.png" Stretch="Fill" Grid.RowSpan="3">
            <Image.Clip>
                <RectangleGeometry RadiusX="50" RadiusY="50" Rect="0,0,70,70"/>
            </Image.Clip>
            <Image.RenderTransform>
                <RotateTransform x:Name="rotateTransform" CenterX="35" CenterY="35" Angle="0"/>
            </Image.RenderTransform>
        </Image>



        <!-- Имя юзера -->
        <TextBlock x:Name="TextConnecting" Text="CONNECTING..." TextWrapping="Wrap" Foreground="#5865F2" FontSize="12" FontFamily="Arial Black" Opacity="1" 
                   Grid.Column="5" Grid.Row="6" VerticalAlignment="Top" HorizontalAlignment="Left" TextAlignment="Center" Height="17" Width="200" Grid.ColumnSpan="2" Margin="1,15,0,0"/>
        <TextBlock x:Name="TextUsername" Text="Please wait" TextWrapping="Wrap" Foreground="White" FontSize="15" FontFamily="Microsoft YaHei UI" Opacity="0.5" 
                   Grid.Column="5" Grid.Row="6" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Height="38" Width="200"/>

        <Rectangle Style="{DynamicResource RectangleStyleWarn}" 
           IsEnabled="False" 
           x:Name="RectangleWarnings" 
           Grid.Column="5" 
           HorizontalAlignment="Center" 
           Height="26" 
           Margin="0,58,0,0" 
           Grid.Row="6" 
           VerticalAlignment="Top" 
           Width="200"/>
        <TextBlock Style="{DynamicResource TextBlockStyleWarn}" 
           IsEnabled="{Binding ElementName=RectangleWarnings, Path=IsEnabled}" 
           x:Name="TextWarnings" 
           Text="Warning text" 
           TextWrapping="Wrap" 
           Foreground="White" 
           FontSize="14" 
           FontFamily="Yu Gothic UI Semibold" 
           Opacity="1" 
           Grid.Column="5" 
           Grid.Row="6" 
           TextAlignment="Center" 
           VerticalAlignment="Top" 
           Width="200" 
           Margin="0,61,30,0" 
           Grid.ColumnSpan="2"/>


        <!-- LargeImageKey -->
        <TextBlock x:Name="TextLargeImageKey" Text="LARGE IMAGE KEY:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7" 
                   Grid.Column="5" Grid.Row="7" VerticalAlignment="Center" Height="12" Margin="1,0,30,0" Grid.ColumnSpan="2"/>
        <TextBlock x:Name="TextLargeImageKeyWatermark" Text="Enter your key..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="5" Grid.Row="8" VerticalAlignment="Center" Height="21" Margin="11,0,30,0" Grid.ColumnSpan="2"/>
        <TextBox x:Name="TextBoxLargeImageKey" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="NoWrap" Text="" 
                 VerticalAlignment="Center" Width="196" Background="#1e2124" Height="37" TextChanged="TextBoxLargeImageKeyTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" SelectionBrush="#5865F2" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="64" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Top" Padding="5" 
                 Grid.Column="5" Grid.Row="8"/>

        <!-- LargeImageText -->
        <TextBlock x:Name="TextLargeImageText" Text="LARGE IMAGE TEXT:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7" 
                   Grid.Column="5" Grid.Row="9" VerticalAlignment="Center" Height="12" Margin="1,0,30,0" Grid.ColumnSpan="2"/>
        <TextBlock x:Name="TextLargeImageTextWatermark" Text="Picture caption..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="5" Grid.Row="10" VerticalAlignment="Top" Height="71" Margin="11,13,2,0" Grid.RowSpan="3"/>
        <TextBox x:Name="TextBoxLargeImageText" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="Wrap" Text="" 
                 VerticalAlignment="Top" Width="196" Background="#1e2124" Height="88" TextChanged="TextBoxLargeImageTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" SelectionBrush="#5865F2" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="128" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Top" Padding="5" 
                 Grid.Column="5" Grid.Row="10" Grid.RowSpan="3" Margin="0,4,0,0"/>


        <!-- ПРАВЫЕ ПОЛЯ -->

        <CheckBox x:Name="SwithAllowAutostart" IsChecked="False" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="17" FontFamily="Corbel" Foreground="White"
          Grid.Column="6" Grid.Row="4" Grid.ColumnSpan="4" Height="26" Width="199" Margin="29,10,0,0"
          Click="SwithAllowAutostartClick">
            Add to Autostart
        </CheckBox>
        <TextBlock Text="Launching when Windows starts" FontSize="13" Grid.Column="7" HorizontalAlignment="Center" Margin="0,46,0,0" Grid.Row="4" TextWrapping="Wrap" Foreground="White" Opacity="0.5" VerticalAlignment="Top" Grid.RowSpan="2" Grid.ColumnSpan="3" Height="18" Width="190"/>


        <Separator Grid.Column="7" Background="#494a4d" HorizontalAlignment="Left" Grid.Row="6" VerticalAlignment="Top" Height="16" Width="199" Grid.ColumnSpan="3" Margin="0,1,0,0"/>

        <Button Style="{DynamicResource ButtonDevPortalStyle}" x:Name="ButtonDevPortal" Hyperlink.Click="ButtonDevPortalClick" IsEnabled="True" Width="196" Height="29" Content="Developer Portal"
                Grid.Column="7" Grid.Row="6" HorizontalAlignment="Center" VerticalAlignment="Top" FontFamily="Microsoft JhengHei UI" Background="#666666" Foreground="White" BorderThickness="0" FontSize="13" Margin="0,40,0,0" Grid.ColumnSpan="3"/>

        <!-- SmallImageKey -->
        <TextBlock x:Name="TextSmallImageKey" Text="SMALL IMAGE KEY:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7" 
                   Grid.Column="7" Grid.Row="7" VerticalAlignment="Center" Height="12" Margin="1,0,5,0" Grid.ColumnSpan="4"/>
        <TextBlock x:Name="TextSmallImageKeyWatermark" Text="Enter your key..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="7" Grid.Row="8" VerticalAlignment="Center" Height="21" Margin="11,0,24,0"/>
        <TextBox x:Name="TextBoxSmallImageKey" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="NoWrap" Text="" 
                 VerticalAlignment="Center" Width="196" Background="#1e2124" Height="37" TextChanged="TextBoxSmallImageKeyTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" SelectionBrush="#5865F2" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="64" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Top" Padding="5" 
                 Grid.Column="7" Grid.Row="8" Grid.ColumnSpan="3"/>

        <!-- SmallImageText -->
        <TextBlock x:Name="TextSmallImageText" Text="SMALL IMAGE TEXT:" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.7" 
                   Grid.Column="7" Grid.Row="9" VerticalAlignment="Center" Height="12" Margin="1,0,5,0" Grid.ColumnSpan="4"/>
        <TextBlock x:Name="TextSmallImageTextWatermark" Text="Small picture caption..." Foreground="White" FontSize="16" Opacity="0.7" 
                   Grid.Column="7" Grid.Row="10" VerticalAlignment="Top" Height="71" Margin="11,13,2,0" Grid.ColumnSpan="3" Grid.RowSpan="3"/>
        <TextBox x:Name="TextBoxSmallImageText" Style="{DynamicResource TextBoxes}" HorizontalAlignment="Center" TextWrapping="Wrap" Text="" 
                 VerticalAlignment="Top" Width="196" Background="#1e2124" Height="88" TextChanged="TextBoxSmallImageTextChanged" 
                 TextElement.Foreground="White" TextElement.FontSize="16" BorderBrush="#1e2124" SelectionBrush="#5865F2" BorderThickness="3" Opacity="0.7" AcceptsReturn="False" 
                 MaxLength="128" SelectionTextBrush="#5865F2" CaretBrush="#5865F2" VerticalContentAlignment="Top" Padding="5" 
                 Grid.Column="7" Grid.Row="10" Grid.ColumnSpan="3" Grid.RowSpan="3" Margin="0,4,0,0"/>


        <!-- Надпись версии -->
        <TextBlock x:Name="Version" Text="ver. 0.2" FontSize="13" FontFamily="Arial Black" Foreground="White" Opacity="0.3" 
                   Grid.Column="3" Grid.Row="14" HorizontalAlignment="Left" TextAlignment="Center" Width="70" VerticalAlignment="Top" Height="13">
            <TextBlock.ToolTip>
                <ToolTip Background="#36393e" Foreground="White" Content="By @weyneee" />
            </TextBlock.ToolTip>
        </TextBlock>


        <!-- Кнопки снизу -->
        <Button Style="{DynamicResource ButtonSetupStyle}" x:Name="ButtonSetup" Click="ButtonSetupClick" IsEnabled="True" Width="120" Height="29" Content="Add Buttons"
                Grid.Column="5" Grid.Row="13" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Microsoft JhengHei UI" Background="#5865F2" Foreground="White" BorderThickness="0" FontSize="13" Margin="173,3,0,0" Grid.ColumnSpan="3"/>

        <Button Style="{DynamicResource ButtonSetActivityStyle}" x:Name="ButtonSetActivity" Click="ButtonSetActivityClick" IsEnabled="False" Width="120" Height="29" Content="Set Activity"
                Grid.Column="7" Grid.Row="13" Grid.RowSpan="2"  Grid.ColumnSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Microsoft JhengHei UI" Background="#5865F2" Foreground="White" BorderThickness="0" FontSize="13" Margin="78,3,0,0"/>


        <!-- Верхняя панель с крестом -->
        <Rectangle HorizontalAlignment="Left" Height="29"  VerticalAlignment="Top" Width="685" Fill="#1e2124"  MouseLeftButtonDown="titleBar_MouseLeftButtonDown" MouseRightButtonDown="titleBar_MouseRightButtonDown"
                   Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="11" Margin="0,-3,0,0">
        </Rectangle>

        <Rectangle x:Name="RedSquare" HorizontalAlignment="Left" Height="29"  VerticalAlignment="Top" Width="35" Fill="Red" Opacity="0" MouseLeftButtonDown="ImageCloseClick" MouseEnter="RedSquareMouseEnter" MouseLeave="RedSquareMouseLeave"
                   Grid.Column="8" Grid.RowSpan="2" Grid.ColumnSpan="4" Margin="0,-3,0,0"/>

        <Image x:Name="ImageClose" Grid.Column="9" Margin="2,2,3,8" Source="/Assets/x.png" Stretch="Fill" Opacity="0.7" MouseLeftButtonDown="ImageCloseClick" MouseEnter="RedSquareMouseEnter" MouseLeave="RedSquareMouseLeave" Grid.RowSpan="2" RenderTransformOrigin="0.495,0.519" Grid.ColumnSpan="2">
            <Image.ToolTip>
                <ToolTip Background="#36393e" Foreground="White" Content="Minimize to tray" />
            </Image.ToolTip>
        </Image>

        <TextBlock x:Name="WindowTitle" Text="Custom Discord RPC" Margin="0,6,30,0" Foreground="White" FontSize="12" FontFamily="Arial Black" Opacity="0.4" MouseLeftButtonDown="titleBar_MouseLeftButtonDown" VerticalAlignment="Top" MouseRightButtonDown="titleBar_MouseRightButtonDown"
                   Grid.Column="2" Grid.ColumnSpan="3" Height="22" Grid.RowSpan="2"/>

    </Grid>
</Window>
